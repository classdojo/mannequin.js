// Generated by CoffeeScript 1.6.2
(function() {
  var Transformer;

  Transformer = require("./transformer");

  module.exports = (function() {
    /*
    */
    function _Class(model) {
      this.model = model;
      this._transformers = {};
    }

    /*
    */


    _Class.prototype.set = function(key, value) {
      var target, transformer, _i, _len, _ref;

      target = {
        key: key,
        currentValue: value
      };
      _ref = this._findTransformers(key, false);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        transformer = _ref[_i];
        transformer(target);
      }
      return target.currentValue;
    };

    /*
    */


    _Class.prototype._findTransformers = function(key, create) {
      var endKey, keyParts, part, _i, _len;

      if (create == null) {
        create = true;
      }
      keyParts = key.split(".");
      endKey = keyParts[keyParts.length - 1];
      for (_i = 0, _len = keyParts.length; _i < _len; _i++) {
        part = keyParts[_i];
        if (!this._transformers[part]) {
          if (!create) {
            return [];
          }
        }
        this._transformers[part] = this._transformers[part] || {};
      }
      if (!this._transformers[endKey]._items) {
        this._transformers[endKey]._items = [];
      }
      return this._transformers[endKey]._items || [];
    };

    _Class.prototype.use = function(key) {
      var transformer,
        _this = this;

      transformer = new Transformer(this, key);
      this._findTransformers(key, true).push(function(target) {
        if (target.key !== key) {
          return;
        }
        if (!key || (_this.model.get(key) !== target.currentValue)) {
          return target.currentValue = transformer.set(target.currentValue);
        }
      });
      return transformer;
    };

    return _Class;

  })();

}).call(this);
